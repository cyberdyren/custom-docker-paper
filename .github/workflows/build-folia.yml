name: Patch, Build with Gradle, and Push Docker Image

on:
  push:
    branches: [ "**" ]
  pull_request:

jobs:
  build-folia:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout PaperMC/Folia repository
      uses: actions/checkout@v2
      with:
        repository: PaperMC/Folia

    - name: Set up JDK
      uses: actions/setup-java@v2
      with:
        distribution: 'temurin'
        java-version: '17'

    - name: Cache Gradle dependencies
      uses: actions/cache@v2
      with:
        path: ~/.gradle/caches
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
        restore-keys: |
          ${{ runner.os }}-gradle-

    - name: Configure Git User Details
      run: git config --global user.email "actions@github.com" && git config --global user.name "Github Actions"

    - name: Gradle Apply Patches
      id: apply_patches
      run: |
        ./gradlew applyPatches
        echo "::set-output name=cache-key::applyPatches-${{ hashFiles('build/**') }}"

    - name: Build Reobf Paperclip
      id: reobf_paperclip
      run: |
        ./gradlew createReobfPaperclipJar
        echo "::set-output name=cache-key::createReobfPaperclipJar-${{ hashFiles('build/**') }}"

    - name: Upload Build Artifact
      uses: actions/upload-artifact@v3
      with:
        name: Folia
        path: build/libs/*folia-bundler*reobf.jar

    - name: Cache Gradle outputs
      uses: actions/cache@v2
      with:
        path: |
          ~/.gradle/caches
          ./gradlew
        key: ${{ runner.os }}-gradle-outputs-${{ steps.apply_patches.outputs.cache-key }}-${{ steps.reobf_paperclip.outputs.cache-key }}
        restore-keys: |
          ${{ runner.os }}-gradle-outputs-

  build-container:
    permissions:
      packages: write
    runs-on: ubuntu-latest
    needs: build-folia

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v3

    - name: Download Build Artifact
      uses: actions/download-artifact@v4.1.7
      with:
        name: Folia
        path: artifacts

    - name: Rename Artifact
      run: |
        file=$(find artifacts/ -type f -name 'folia-bundler-*.jar' -exec sh -c 'basename "$0" | grep -q "folia-bundler-.*-reobf.jar" && echo "$0"' {} \;)
        if [ -n "$file" ]; then
          mv "$file" artifacts/folia.jar
          echo "File renamed to folia.jar"
        else
          echo "No file matching the pattern found"
        fi

    - name: Cache Docker layers
      uses: actions/cache@v2
      with:
        path: /var/lib/docker
        key: ${{ runner.os }}-docker-${{ hashFiles('**/Dockerfile') }}
        restore-keys: |
          ${{ runner.os }}-docker-

    - name: Build the Docker image
      run: docker build . --file Dockerfile --tag ghcr.io/max-42/v18s1:latest

    - name: Push the Docker image
      run: |
        echo ${{ secrets.GITHUB_TOKEN }} | docker login ghcr.io -u ${{ github.actor }} --password-stdin
        docker push ghcr.io/max-42/v18s1:latest

